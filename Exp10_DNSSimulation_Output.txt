DNS Simulation Server :
import java.io.*;
import java.net.*;
public class DNS_Server
{
private static int indexOf(String[] array, String str)
{
str = str.trim();
for (int i = 0; i < array.length; i++) {
if (array[i].equals(str))
return i;
}
return -1;
}
public static void main(String arg[]) throws IOException
{
String[] hosts = { "zoho.com", "gmail.com", "google.com", "facebook.com" };
String[] ip = { "172.28.251.59", "172.217.11.5", "172.217.11.14", "31.13.71.36" };
System.out.println("Press Ctrl + C to Quit");
byte[] receivedata = new byte[1021];
DatagramSocket serversocket = new DatagramSocket(1362);
while (true) {
DatagramPacket recvpack = new DatagramPacket(receivedata,
receivedata.length);
serversocket.receive(recvpack);
String sen = new String(recvpack.getData(), 0, recvpack.getLength());
InetAddress ipaddress = recvpack.getAddress();
int port = recvpack.getPort();
String capsent;
System.out.println("Request for host " + sen);
if (indexOf(hosts, sen) != -1)
capsent = ip[indexOf(hosts, sen)];
else
capsent = "Host Not Found";
byte[] senddata = capsent.getBytes();
DatagramPacket pack = new DatagramPacket(senddata, senddata.length,
ipaddress, port);
serversocket.send(pack);
}
}
}

DNS Simulation Client :
import java.io.*;
import java.net.*;
public class DNS_Client
{
public static void main(String args[])throws IOException
{
BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
DatagramSocket clientsocket = new DatagramSocket();
InetAddress ipaddress;
if (args.length == 0)
ipaddress = InetAddress.getLocalHost();
else
ipaddress = InetAddress.getByName(args[0]);
byte[] senddata = new byte[1024];
byte[] receivedata = new byte[1024];
int portaddr = 1362;
System.out.print("Enter the hostname : ");
String sentence = br.readLine();
senddata = sentence.getBytes();
DatagramPacket pack = new
DatagramPacket(senddata,senddata.length,ipaddress,portaddr);
clientsocket.send(pack);
DatagramPacket recvpack =new
DatagramPacket(receivedata,receivedata.length);
clientsocket.receive(recvpack);
String modified = new String(recvpack.getData());
System.out.println("IP Address: " + modified);
clientsocket.close();
}
}

